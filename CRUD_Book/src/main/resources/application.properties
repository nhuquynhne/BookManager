spring.datasource.url=jdbc:mysql://localhost:3306/bookmanager?useSSL=false

spring.datasource.username=root
spring.datasource.password=123456

spring.datasource.dbcp.test-while-idle=true
spring.datasource.dbcp.validation-query=SELECT 1

spring.jpa.show-sql=true

spring.jpa.hibernate.ddl-auto=none

spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL55Dialect




##server.port= 8081
## Connection url for the database "mycontact"
#spring.datasource.url=jdbc:mysql://localhost:3306/bookmanager?useSSL=false
##spring.datasource.url = jdbc:h2:mem:bookmanager
##spring.datasource.driverClassName = org.h2.Driver
## MySQL username and password 
#spring.datasource.username=root
#spring.datasource.password=123456
#
## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.dbcp.test-while-idle=true
#spring.datasource.dbcp.validation-query=SELECT 1
#
## ===============================
## JPA / HIBERNATE
## ===============================
#
## Use spring.jpa.properties.* for Hibernate native properties (the prefix is
## stripped before adding them to the entity manager).
#
## Show or not log for each sql query
##spring.jpa.show-sql=true
#
##spring.jpa.database-platform = org.hibernate.dialect.H2Dialect
## Hibernate ddl auto (create, create-drop, update): with "update" the database
## schema will be automatically updated accordingly to java entities found in
## the project
#spring.jpa.hibernate.ddl-auto= create-drop
#spring.jpa.show-sql = true
##spring.h2.console.enabled = true
## Naming strategy
#spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy
#
## Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
